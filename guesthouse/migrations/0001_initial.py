# Generated by Django 4.1.7 on 2024-05-08 16:00

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('idclient', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('prenom', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('numtel', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('email', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('adresse', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
            ],
            options={
                'db_table': 'client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GuesthouseEvent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'guesthouse_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hebergement',
            fields=[
                ('idchambre', models.IntegerField(primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=45)),
                ('type', models.CharField(max_length=45)),
                ('description', models.CharField(max_length=45)),
                ('prix', models.IntegerField()),
                ('maison', models.IntegerField()),
                ('chambre', models.IntegerField()),
                ('etage', models.IntegerField()),
                ('local', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'hebergement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Historique',
            fields=[
                ('idhistorique', models.IntegerField(primary_key=True, serialize=False)),
                ('adressip', models.CharField(db_column='adressIP', max_length=45)),
                ('date', models.DateField()),
                ('tache', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'historique',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('idnotification', models.IntegerField(primary_key=True, serialize=False)),
                ('consulte', models.IntegerField()),
                ('email', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reshebergement',
            fields=[
                ('idhebergement', models.IntegerField(primary_key=True, serialize=False)),
                ('numcourrier', models.IntegerField()),
                ('etablissement', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('demandeur', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('capacite', models.IntegerField()),
                ('dateheberg', models.DateField()),
                ('dateentree', models.DateField(db_column='dateEntree')),
                ('datesorti', models.DateField(db_column='dateSorti')),
                ('chambredispo', models.CharField(db_collation='utf8mb4_0900_ai_ci', db_column='chambreDispo', max_length=45)),
                ('priseencharge', models.CharField(db_collation='utf8mb4_0900_ai_ci', db_column='priseEnCharge', max_length=45)),
                ('moyen', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=100)),
                ('statue', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=100)),
                ('type', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=100)),
            ],
            options={
                'db_table': 'reshebergement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ressallehebergement',
            fields=[
                ('idressallehebergement', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('etablissement', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('dateentree', models.DateField(db_column='dateEntree')),
                ('datesorti', models.DateField(db_column='dateSorti')),
                ('nomsalledispo', models.CharField(db_collation='utf8mb4_0900_ai_ci', db_column='nomSalledispo', max_length=45)),
                ('nombrepersonne', models.IntegerField(db_column='nombrePersonne')),
                ('typeevenement', models.CharField(db_collation='utf8mb4_0900_ai_ci', db_column='typeEvenement', max_length=45)),
                ('dejeuner', models.IntegerField()),
                ('diner', models.IntegerField()),
                ('nombrecourrier', models.IntegerField(db_column='nombreCourrier')),
                ('moyen', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=100)),
                ('statue', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=100)),
                ('commentaire', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=100)),
                ('capacite', models.IntegerField()),
                ('nuite', models.IntegerField()),
                ('dateentre', models.DateField(db_column='dateEntre')),
                ('datesortie', models.DateField(db_column='dateSortie')),
                ('chambre', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
            ],
            options={
                'db_table': 'ressallehebergement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Restauration',
            fields=[
                ('idrestauration', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('prix', models.IntegerField()),
            ],
            options={
                'db_table': 'restauration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Salle',
            fields=[
                ('idsalle', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('prix', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('local', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
            ],
            options={
                'db_table': 'salle',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('idutilisateur', models.IntegerField(primary_key=True, serialize=False)),
                ('nom', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('email', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('modpasse', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
            ],
            options={
                'db_table': 'utilisateur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ressalle',
            fields=[
                ('idressalle', models.OneToOneField(db_column='idressalle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='ressalle_idressalle', serialize=False, to='guesthouse.salle')),
                ('etablissement', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('demandeur', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=45)),
                ('dateEntr√©e', models.DateField(db_column='dateEntree')),
                ('dateSortie', models.DateField(db_column='dateSorti')),
                ('nomSalleDispo', models.CharField(db_collation='utf8mb4_0900_ai_ci', db_column='nomSalledispo', max_length=45)),
                ('nombrePersonne', models.IntegerField(db_column='nombrePersonne')),
                ('typeEvenement', models.CharField(db_collation='utf8mb4_0900_ai_ci', db_column='typeEvenement', max_length=45)),
                ('dejeuner', models.IntegerField()),
                ('pauseCafe', models.IntegerField()),
                ('nombrecourrier', models.IntegerField(db_column='nombreCourrier')),
                ('moyen', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=100)),
                ('statue', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=100)),
                ('commentaire', models.CharField(db_collation='utf8mb4_0900_ai_ci', max_length=100)),
            ],
            options={
                'db_table': 'ressalle',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_directeur', models.BooleanField(default=False)),
                ('is_chefreception', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_financier', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
